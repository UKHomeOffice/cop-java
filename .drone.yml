pipeline:
  synch_secrets:
    image: quay.io/ukhomeofficedigital/cop-secrets
    environment:
      - DRONE_SERVER=https://drone.acp.homeoffice.gov.uk
      - DEPLOY_ENV=dev
    secrets:
      - source: DEV_DRONE_AWS_ACCESS_KEY_ID
        target: AWS_ACCESS_KEY_ID
      - source: DEV_DRONE_AWS_SECRET_ACCESS_KEY
        target: AWS_SECRET_ACCESS_KEY
      - source: DRONE_PUBLIC_TOKEN
        target: DRONE_TOKEN
    when:
      environment: secrets
      event: deployment
      matrix:
        JAVA_VERSION: 11

  build:
    image: quay.io/ukhomeofficedigital/drone-docker
    commands:
      - docker build -t cop-java:$${TAG_NAME} -f Dockerfile-$${DOCKER_FILENAME} --build-arg JAVA_TAG=$${JAVA_VERSION} .

    when:
      event: push

  vulnerability_scan_matrix:
    image: quay.io/ukhomeofficedigital/anchore-submission:latest
    dockerfile: Dockerfile-${DOCKER_FILENAME}
    image_name: cop-java:${TAG_NAME}
    local_image: true
    tolerate: low
    fail_on_detection: false
    when:
      branch: master
      event: push

  image_to_quay_matrix:
    image: quay.io/ukhomeofficedigital/drone-docker
    secrets:
    - source: QUAY_USERNAME
      target: DOCKER_USERNAME
    - source: QUAY_PASSWORD
      target: DOCKER_PASSWORD
    commands:
      - docker build --rm=true -f Dockerfile-$${DOCKER_FILENAME} -t cop-java:$${TAG_NAME} --build-arg JAVA_TAG=$${JAVA_VERSION} . --pull=true --label org.label-schema.schema-version=1.0 --label org.label-schema.build-date="$(date)" --label org.label-schema.vcs-ref=$${TAG_NAME} --label org.label-schema.vcs-url="https://github.com/UKHomeOffice/cop-java.git"
      - docker tag cop-java:$${TAG_NAME} quay.io/ukhomeofficedigital/cop-java:$${TAG_NAME}
      - echo $${DOCKER_PASSWORD} | docker login -u $${DOCKER_USERNAME} --password-stdin quay.io
      - docker push quay.io/ukhomeofficedigital/cop-java:$${TAG_NAME}
      - docker rmi cop-java:$${TAG_NAME}
    when:
      branch: master
      event: push

  notify:
    image: plugins/slack
    secrets: [ SLACK_WEBHOOK ]
    channel: cop-deployments
    username: Drone Build Watcher
    template: >
      {{#build.deployTo}}
        *{{repo.name}} - Build {{build.number}} - {{uppercasefirst build.deployTo}} - {{uppercase build.status}}*
      {{else}}
        *{{repo.name}} - ${TAG_NAME} - Build {{build.number}} - Development - {{uppercase build.status}}*
      {{/build.deployTo}}
      {{build.link}}
    when:
      branch: master
      event: [ push, deployment ]
      status: [ success, failure ]

matrix:
  include:
    - DOCKER_FILENAME: stretch
      JAVA_VERSION: 8
      TAG_NAME: openjdk-8
    - DOCKER_FILENAME: stretch
      JAVA_VERSION: 11
      TAG_NAME: openjdk-11
    - DOCKER_FILENAME: alpine
      JAVA_VERSION: 8-alpine
      TAG_NAME: openjdk-8-alpine
