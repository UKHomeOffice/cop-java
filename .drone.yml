---
kind: pipeline
type: kubernetes
name: matrix-1

platform:
  os: linux
  arch: amd64

steps:
- name: build
  pull: always
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
  commands:
  - n=0; while [ "$n" -lt 60 ] && [ ! docker stats --no-stream ]; do n=$(( n + 1 )); sleep 1; done
  - docker build -t cop-java:$openjdk-8 -f Dockerfile-$stretch --build-arg JAVA_TAG=$8 .
  when:
    event:
    - push

- name: vulnerability_scan_matrix
  pull: always
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/anchore-submission:latest
  environment:
    DOCKERFILE: Dockerfile-stretch
    IMAGE_NAME: cop-java:openjdk-8
    LOCAL_IMAGE: true
    TOLERATE: low
    WHITELIST_FILE: whitelist
  when:
    branch:
    - master
    event:
    - push

- name: image_to_quay_matrix
  image: plugins/docker
  commands:
  - docker build --rm=true -f Dockerfile-$stretch -t cop-java:$openjdk-8 --build-arg JAVA_TAG=$8 . --pull=true --label org.label-schema.schema-version=1.0 --label org.label-schema.build-date="$(date)" --label org.label-schema.vcs-ref=$openjdk-8 --label org.label-schema.vcs-url="https://github.com/UKHomeOffice/cop-java.git"
  - docker tag cop-java:$openjdk-8 quay.io/ukhomeofficedigital/cop-java:$openjdk-8
  - echo $${DOCKER_PASSWORD} | docker login -u $${DOCKER_USERNAME} --password-stdin quay.io
  - docker push quay.io/ukhomeofficedigital/cop-java:$openjdk-8
  - docker rmi cop-java:$openjdk-8
  environment:
    DOCKER_PASSWORD:
      from_secret: QUAY_PASSWORD
    DOCKER_USERNAME:
      from_secret: QUAY_USERNAME
  volumes:
  - name: dockersock
    path: /var/run
  when:
    branch:
    - master
    event:
    - push

- name: notify
  pull: if-not-exists
  image: plugins/slack
  settings:
    channel: cop-deployments
    template: "{{#build.deployTo}}\n  *{{repo.name}} - Build {{build.number}} - {{uppercasefirst build.deployTo}} - {{uppercase build.status}}*\n{{else}}\n  *{{repo.name}} - openjdk-8 - Build {{build.number}} - Development - {{uppercase build.status}}*\n{{/build.deployTo}} {{build.link}}\n"
    username: Drone Build Watcher
  environment:
    SLACK_WEBHOOK:
      from_secret: SLACK_WEBHOOK
  when:
    branch:
    - master
    event:
    - push
    - promote
    status:
    - success
    - failure

services:
- name: docker
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind

- name: anchore-submission-server
  pull: always
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/anchore-submission:latest
  commands:
  - /run.sh server

---
kind: pipeline
type: kubernetes
name: matrix-2

platform:
  os: linux
  arch: amd64

steps:
- name: synch_secrets
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/cop-secrets
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: DEV_DRONE_AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: DEV_DRONE_AWS_SECRET_ACCESS_KEY
    DEPLOY_ENV: dev
    DRONE_SERVER: https://drone-gh.acp.homeoffice.gov.uk
    DRONE_TOKEN:
      from_secret: DRONE_V1_PUBLIC_TOKEN
    DRONE_VERSION: ${DRONE_SYSTEM_VERSION}
  when:
    event:
    - promote
    target:
    - secrets

- name: build
  pull: always
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
  commands:
  - n=0; while [ "$n" -lt 60 ] && [ ! docker stats --no-stream ]; do n=$(( n + 1 )); sleep 1; done
  - docker build -t cop-java:$openjdk-11 -f Dockerfile-$stretch --build-arg JAVA_TAG=$11 .
  when:
    event:
    - push

- name: vulnerability_scan_matrix
  pull: always
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/anchore-submission:latest
  environment:
    DOCKERFILE: Dockerfile-stretch
    IMAGE_NAME: cop-java:openjdk-11
    LOCAL_IMAGE: true
    TOLERATE: low
    WHITELIST_FILE: whitelist
  when:
    branch:
    - master
    event:
    - push

- name: image_to_quay_matrix
  image: plugins/docker
  commands:
  - docker build --rm=true -f Dockerfile-$stretch -t cop-java:$openjdk-11 --build-arg JAVA_TAG=$11 . --pull=true --label org.label-schema.schema-version=1.0 --label org.label-schema.build-date="$(date)" --label org.label-schema.vcs-ref=$openjdk-11 --label org.label-schema.vcs-url="https://github.com/UKHomeOffice/cop-java.git"
  - docker tag cop-java:$openjdk-11 quay.io/ukhomeofficedigital/cop-java:$openjdk-11
  - echo $${DOCKER_PASSWORD} | docker login -u $${DOCKER_USERNAME} --password-stdin quay.io
  - docker push quay.io/ukhomeofficedigital/cop-java:$openjdk-11
  - docker rmi cop-java:$openjdk-11
  environment:
    DOCKER_PASSWORD:
      from_secret: QUAY_PASSWORD
    DOCKER_USERNAME:
      from_secret: QUAY_USERNAME
  volumes:
  - name: dockersock
    path: /var/run
  when:
    branch:
    - master
    event:
    - push

- name: notify
  pull: if-not-exists
  image: plugins/slack
  settings:
    channel: cop-deployments
    template: "{{#build.deployTo}}\n  *{{repo.name}} - Build {{build.number}} - {{uppercasefirst build.deployTo}} - {{uppercase build.status}}*\n{{else}}\n  *{{repo.name}} - openjdk-11 - Build {{build.number}} - Development - {{uppercase build.status}}*\n{{/build.deployTo}} {{build.link}}\n"
    username: Drone Build Watcher
  environment:
    SLACK_WEBHOOK:
      from_secret: SLACK_WEBHOOK
  when:
    branch:
    - master
    event:
    - push
    - promote
    status:
    - success
    - failure

services:
- name: docker
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind

- name: anchore-submission-server
  pull: always
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/anchore-submission:latest
  commands:
  - /run.sh server

---
kind: pipeline
type: kubernetes
name: matrix-3

platform:
  os: linux
  arch: amd64

steps:
- name: build
  pull: always
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
  commands:
  - n=0; while [ "$n" -lt 60 ] && [ ! docker stats --no-stream ]; do n=$(( n + 1 )); sleep 1; done
  - docker build -t cop-java:$openjdk-8-alpine -f Dockerfile-$alpine --build-arg JAVA_TAG=$8-alpine .
  when:
    event:
    - push

- name: vulnerability_scan_matrix
  pull: always
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/anchore-submission:latest
  environment:
    DOCKERFILE: Dockerfile-alpine
    IMAGE_NAME: cop-java:openjdk-8-alpine
    LOCAL_IMAGE: true
    TOLERATE: low
    WHITELIST_FILE: whitelist
  when:
    branch:
    - master
    event:
    - push

- name: image_to_quay_matrix
  image: plugins/docker
  commands:
  - docker build --rm=true -f Dockerfile-$alpine -t cop-java:$openjdk-8-alpine --build-arg JAVA_TAG=$8-alpine . --pull=true --label org.label-schema.schema-version=1.0 --label org.label-schema.build-date="$(date)" --label org.label-schema.vcs-ref=$openjdk-8-alpine --label org.label-schema.vcs-url="https://github.com/UKHomeOffice/cop-java.git"
  - docker tag cop-java:$openjdk-8-alpine quay.io/ukhomeofficedigital/cop-java:$openjdk-8-alpine
  - echo $${DOCKER_PASSWORD} | docker login -u $${DOCKER_USERNAME} --password-stdin quay.io
  - docker push quay.io/ukhomeofficedigital/cop-java:$openjdk-8-alpine
  - docker rmi cop-java:$openjdk-8-alpine
  environment:
    DOCKER_PASSWORD:
      from_secret: QUAY_PASSWORD
    DOCKER_USERNAME:
      from_secret: QUAY_USERNAME
  volumes:
  - name: dockersock
    path: /var/run
  when:
    branch:
    - master
    event:
    - push

- name: notify
  pull: if-not-exists
  image: plugins/slack
  settings:
    channel: cop-deployments
    template: "{{#build.deployTo}}\n  *{{repo.name}} - Build {{build.number}} - {{uppercasefirst build.deployTo}} - {{uppercase build.status}}*\n{{else}}\n  *{{repo.name}} - openjdk-8-alpine - Build {{build.number}} - Development - {{uppercase build.status}}*\n{{/build.deployTo}} {{build.link}}\n"
    username: Drone Build Watcher
  environment:
    SLACK_WEBHOOK:
      from_secret: SLACK_WEBHOOK
  when:
    branch:
    - master
    event:
    - push
    - promote
    status:
    - success
    - failure

services:
- name: docker
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind

- name: anchore-submission-server
  pull: always
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/anchore-submission:latest
  commands:
  - /run.sh server

...
